on:
  release:
    types: [ created ]

permissions:
  # to upload the release assets
  contents: write
  # to push the output image
  packages: write

jobs:
  dist-release:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [ linux, windows, darwin ]
        goarch: [ "386", amd64, arm64 ]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
    steps:
      - uses: actions/checkout@v4
      - uses: wangyoucao577/go-release-action@481a2c1a0f1be199722e3e9b74d7199acafc30a8 # https://github.com/wangyoucao577/go-release-action/releases/tag/v1.53
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          extra_files: LICENSE README.md
          md5sum: false
          sha256sum: true

  publish-container:
    name: Publish Container Image
    runs-on: ubuntu-latest
    needs: dist-release
    steps:
      - uses: actions/checkout@v4

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Prepare container metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/joeycumines/simple-command-output-filter
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Build and push container image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # multi-arch ("fat") manifest
          platforms: linux/386,linux/amd64,linux/arm64
          # N.B. RELEASE is used to _download_ the appropriate binary, built from dist-release
          build-args: |
            RELEASE=${{ github.ref_name }}
